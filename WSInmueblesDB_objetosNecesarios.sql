DROP TABLE IF EXISTS TAINMUEBLE;

CREATE TABLE TAINMUEBLE(FIID INT PRIMARY KEY, 
	FCNOMBRE TEXT,
	FCDIRECCION TEXT,
	FCTELEFONO TEXT,
	FDFECHAALTA TIMESTAMP NOT NULL,
    FDFECHAMODIFICACION TIMESTAMP NOT NULL,
    FCUSUARIOMODIFICO TEXT
);

DROP FUNCTION IF EXISTS FNALLINMUEBLES;
CREATE OR REPLACE FUNCTION FNALLINMUEBLES()
RETURNS TABLE(
	FIID INT,
	FCNOMBRE TEXT,
	FCDIRECCION TEXT,
	FCTELEFONO TEXT,
	FDFECHAALTA TIMESTAMP,
    FDFECHAMODIFICACION TIMESTAMP,
    FCUSUARIOMODIFICO TEXT) AS $$
    BEGIN
         RETURN QUERY
             SELECT
			TI.FIID
			,TI.FCNOMBRE
			,TI.FCDIRECCION
			,TI.FCTELEFONO
			,TI.FDFECHAALTA
			,TI.FDFECHAMODIFICACION
			,TI.FCUSUARIOMODIFICO
		FROM TAINMUEBLE TI
		ORDER BY TI.FIID;
    END;
$$ LANGUAGE plpgsql;


DROP FUNCTION IF EXISTS FNFINDINMUEBLEBYID;
CREATE OR REPLACE FUNCTION FNFINDINMUEBLEBYID(PA_IDINMUEBLE INT)
RETURNS TABLE(
	FIID INT,
	FCNOMBRE TEXT,
	FCDIRECCION TEXT,
	FCTELEFONO TEXT,
	FDFECHAALTA TIMESTAMP,
    FDFECHAMODIFICACION TIMESTAMP,
    FCUSUARIOMODIFICO TEXT) AS $$
    BEGIN
         RETURN QUERY
            SELECT
			TI.FIID
			,TI.FCNOMBRE
			,TI.FCDIRECCION
			,TI.FCTELEFONO
			,TI.FDFECHAALTA
			,TI.FDFECHAMODIFICACION
			,TI.FCUSUARIOMODIFICO
		FROM TAINMUEBLE TI
		WHERE TI.FIID=PA_IDINMUEBLE;
END;
$$ LANGUAGE plpgsql;


DROP FUNCTION IF EXISTS FNADDINMUEBLE;
CREATE OR REPLACE FUNCTION FNADDINMUEBLE(PA_NOMBRE TEXT
	, PA_DIRECCION TEXT, PA_TELEFONO TEXT)
RETURNS TABLE(
	FIID INT,
	FCNOMBRE TEXT,
	FCDIRECCION TEXT,
	FCTELEFONO TEXT,
	FDFECHAALTA TIMESTAMP,
    FDFECHAMODIFICACION TIMESTAMP,
    FCUSUARIOMODIFICO TEXT) AS $$
	DECLARE
		VL_NEWID INTEGER;
    BEGIN
		SELECT COALESCE(MAX(TI.FIID), 0) INTO VL_NEWID FROM TAINMUEBLE TI;
		VL_NEWID := VL_NEWID + 1;

		INSERT INTO TAINMUEBLE(
			FIID
			,FCNOMBRE
			,FCDIRECCION
			,FCTELEFONO
			,FDFECHAALTA
			,FDFECHAMODIFICACION
			,FCUSUARIOMODIFICO)
		VALUES(
			VL_NEWID
			,PA_NOMBRE
			,PA_DIRECCION
			,PA_TELEFONO
			,NOW()
			,NOW()
			,'USRBASE');
	
         RETURN QUERY
            SELECT
			TI.FIID
			,TI.FCNOMBRE
			,TI.FCDIRECCION
			,TI.FCTELEFONO
			,TI.FDFECHAALTA
			,TI.FDFECHAMODIFICACION
			,TI.FCUSUARIOMODIFICO
		FROM TAINMUEBLE TI
		WHERE TI.FIID=VL_NEWID;
END;
$$ LANGUAGE plpgsql;


DROP FUNCTION IF EXISTS FNUPDINMUEBLEBYID;
CREATE OR REPLACE FUNCTION FNUPDINMUEBLEBYID(PA_IDINMUEBLE INT
				, PA_NOMBRE TEXT, PA_DIRECCION TEXT, PA_TELEFONO TEXT)
RETURNS TABLE(
	FIID INT,
	FCNOMBRE TEXT,
	FCDIRECCION TEXT,
	FCTELEFONO TEXT,
	FDFECHAALTA TIMESTAMP,
    FDFECHAMODIFICACION TIMESTAMP,
    FCUSUARIOMODIFICO TEXT) AS $$
    BEGIN
		UPDATE TAINMUEBLE TI
    	SET FCNOMBRE=PA_NOMBRE
			,FCDIRECCION=PA_DIRECCION
			,FCTELEFONO=PA_TELEFONO
			,FDFECHAMODIFICACION=NOW()
			,FCUSUARIOMODIFICO='USRBASE'
    	WHERE TI.FIID=PA_IDINMUEBLE;
	
         RETURN QUERY
            SELECT
			TI.FIID
			,TI.FCNOMBRE
			,TI.FCDIRECCION
			,TI.FCTELEFONO
			,TI.FDFECHAALTA
			,TI.FDFECHAMODIFICACION
			,TI.FCUSUARIOMODIFICO
		FROM TAINMUEBLE TI
		WHERE TI.FIID=PA_IDINMUEBLE;
END;
$$ LANGUAGE plpgsql;


DROP FUNCTION IF EXISTS FNDELINMUEBLEBYID;
CREATE OR REPLACE FUNCTION FNDELINMUEBLEBYID(PA_IDINMUEBLE INT)
RETURNS INTEGER AS $$
DECLARE
		VL_INMUEBLEEXIST INTEGER;
BEGIN
	SELECT COUNT(*) INTO VL_INMUEBLEEXIST
	FROM TAINMUEBLE WHERE FIID=PA_IDINMUEBLE;
		
	IF VL_INMUEBLEEXIST>0 THEN
    	DELETE FROM TAINMUEBLE
    	WHERE FIID=PA_IDINMUEBLE;
		RETURN 1;
	ELSE
		RETURN 2;
	END IF;
END;
$$ LANGUAGE plpgsql;


